swagger: '2.0'
info:
  version: 1.0.0
  title: Lesath Scheduler
  description: The API guide for the cs3733 (Software Engineering) project
  contact:
    email: avanosten@wpi.edu
    
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

tags:
  - name: Organizer
    description: The persona who creates and hosts the schedule.
  - name: Participant
    description: The persona who sets meetings with the organizer.
  - name: SystemAdministrator
    description: The persona who manages meetings from the backend.

paths:
  # Organizer Use Cases
  /organizer/schedule:
    put:
      tags:
        - Organizer
      summary: Let an organizer create a new schedule
      produces:
        - application/json
      consumes: 
        - application/json
      parameters:
        - in: body
          name: ScheduleConfig
          description: The Schedule configuration
          schema:
            $ref: '#/definitions/ScheduleConfig'
      responses:
        201:
          description: Created schedule
          schema:
            type: string
            format: uuid
            example: "20230872-c366-43f1-8ea7-929abfdd742b"
        400:
          description: Bad input parameter
    get:
      tags: 
        - Organizer
      summary: Get a list of schedules for a specific organizer
      produces: 
        - application/json
      parameters:
        - in: header
          name: organizerId
          description: The uuid to identify the organizer
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ScheduleList'
        204:
          description: No content found
        401:
          description: Not authenticated
          
  /organizer/schedule/{scheduleId}:
    post:
      tags:
        - Organizer
      summary: Update schedule configuration for a known schedule
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: query
          name: deltaDays
          description: This value is either positive or negative, if the value is positive extend schedule to the right by that many days, if the value is negative extend schedule to the left by that many days
          type: integer
          required: true
        - in: path
          name: scheduleId
          description: The uuid to identify the specific schedule
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Schedule updated
        401:
          description: Not authenticated
        404:
          description: Schedule not found
          
    delete:
      tags:
        - Organizer
      summary: Delete a known schedule
      parameters:
        - in: path
          name: scheduleId
          description: The uuid to identifiy the specific schedule
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Deletion was successful
        404:
          description: Schedule wasn't found
        403:
          description: Organizer doesn't have access to the requested schedule
    
  /organizer/schedule/{scheduleId}/timeslot:
    post:
      tags:
        - Organizer
      summary: Modify the status of a timeslot
      parameters:
        - in: path
          name: scheduleId
          description: The uuid to identify the specific schedule
          type: string
          format: uuid
          required: true
        - in: query
          name: startTime
          description: The start time of the time slot
          type: string
          format: date-time
          required: true
        - in: query
          description: Sets the status of the current timeslot. true implies an open timeslot, false implies a closed timelost
          name: status
          type: boolean
          required: true
        - in: header
          name: organizerId
          description: The uuid to identify which organizer is making the request
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Timeslot has been updated
        401:
          description: Not authenticated
        409:
          description: There is a meeting in the timeslot
        400:
          description: No timeslot exists

  /organizer/schedule/{scheduleId}/timeslot/range:
    post:
      tags:
        - Organizer
      summary: Modify the status of a timeslot range for every day
      parameters:
        - in: path
          name: scheduleId
          description: The uuid to identify the specific schedule
          type: string
          format: uuid
          required: true
        - in: query
          name: startTime
          description: The start time of the time range
          type: string
          format: time
          required: true
        - in: query
          name: endTime
          description: The end time of the time range
          type: string
          format: time
          required: true
        - in: query
          description: Sets the status of the desired time range. True implies an open time range, close implies a closed time range
          name: status
          type: boolean
          required: true
        - in: header
          name: organizerId
          description: The uuid to identify the specific organizer making the request.
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Time range has been updated
        401:
          description: Not authenticated
        409:
          description: There is a meeting in the time range
        400:
          description: Invalid time range

  /organizer/schedule/{scheduleId}/timeslot/day:
    post:
      tags:
        - Organizer
      summary: Modify the availablity for a single day
      parameters:
        - in: path
          name: scheduleId
          description: The uuid to identify a specific schedule
          type: string
          format: uuid
          required: true
        - in: query
          name: day
          description: The day to modify
          type: string
          format: date
          required: true
        - in: query
          description: Sets the availability of the day. true implies an available day, false implies an unavailable day
          name: status
          type: boolean
          required: true
        - in: header
          name: organizerId
          description: The uuid to identify the specific organizer
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Day has been updated
        401:
          description: Not authenticated
        409:
          description: There is a meeting in the desired day
        400:
          description: Invalid day
   
  /organizer/schedule/{scheduleId}/meeting/{meetingId}:
    delete:
      tags:
        - Organizer
      summary: Cancel a specific meeting for a specific schedule
      parameters:
        - in: path
          name: scheduleId
          description: The uuid for the specific schedule
          type: string
          format: uuid
          required: true
        - in: path
          name: meetingId
          description: The uuid for the specific meeting
          type: string
          format: uuid
          required: true
        - in: header
          name: organizerId
          description: The uuid for the specific organizer
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Meeting has been cancelled
        401:
          description: Not authenticated
        400:
          description: No timeslot exists 
   
  # Participant Use Cases
  /participant/schedule/{scheduleId}/meeting:
    put:
      tags: 
        - Participant
      summary: Book a meeting for a specific schedule
      parameters:
        - in: path
          name: scheduleId
          description: The uuid for the specific schedule
          type: string
          format: uuid
          required: true
        - in: body
          name: meeting
          description: The meeting object to be inserted into the schedule
          schema: 
            $ref: '#/definitions/Meeting'
          required: true
      responses:
        201:
          description: Meeting is created
          schema: 
            $ref: '#/definitions/Meeting'
        400:
          description: Meeting is out of bounds
        404:
          description: Schedule not found
        409:
          description: Meeting already exists
    
  /participant/schedule/{scheduleId}/meeting/{meetingId}:
    delete:
      tags:
        - Participant
      summary: Cancel a specific meeting for a specific schedule
      parameters:
        - in: path
          name: scheduleId
          description: The uuid to identify a specific schedule
          type: string
          format: uuid
          required: true
        - in: path
          name: meetingId
          description: The uuid to identify a specific meeting
          type: string
          format: uuid
          required: true
        - in: header
          name: secretCode
          description: The partipant's secret code to verify 
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: Meeting is deleted successfully
        401:
          description: Unauthorized
        404:
          description: Meeting not found
        
  /participant/schedule/{scheduleId}/search:
    post:
      tags:
        - Participant
      summary: Query available timeslots
      parameters:
        - in: path
          name: scheduleId
          description: The uuid that correlates to a specific schedule
          type: string
          format: uuid
          required: true
        - in: body
          name: ScheduleQuery
          description: The query object to search for
          schema:
            $ref: '#/definitions/ScheduleQuery'
          required: true
      responses: 
        200:
          description: Ok
          schema:
            type: array
            items: 
              type: string
              format: date-time
            example:
              - "2012-04-23T18:25:43.511Z"
              - "2013-19-26T18:25:43.511Z"
        400:
          description: Bad Request
        404:
          description: Schedule not found
        204:
          description: No Content
  
  
  # System Administrator Use Cases
  /systemAdministrator/schedule:
    post:
      tags:
        - SystemAdministrator
      summary: Query all schedules
      parameters: 
        - in: body
          name: query
          description: Query object to filter out schedules
          schema: 
            $ref: '#/definitions/SystemAdministratorQuery'
      responses:
        204:
          description: No schedules
        200:
          description: Giving back list of schedules
          schema:
            $ref: '#/definitions/ScheduleList'
        400:
          description: Invalid query
        
    delete:
      tags:
        - SystemAdministrator
      summary: Delete a specific schedule
      parameters:
        - in: body
          name: scheduleIds
          description: A list of uuids that correlate to the schedules which must be deleted
          schema:
            type: array
            items:
              type: string
              format: uuid
            example:
              - "20230872-c366-43f1-vasd-929abfdd742b"
              - "12345122-asdf-43f1-8ea7-adsfcasdfas3"
              - "qwqere34-c366-2334-8ea7-1234fasd4314"
              - "asdfasd3-fdsa-43f1-8ea7-543asdf234e4"
          required: true
      responses:
        204:
          description: Deleted
        400:
          description: Invalid parameters
        
  # Shared functionality between Participant and Organizer
  /schedule/{scheduleId}:
    get:
      tags:
        - Organizer
        - Participant
      summary: Get the schedule object for a known schedule
      produces:
        - application/json
      parameters:
        - in: path
          name: scheduleId
          description: The uuid to identify the specific schedule
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Schedule'
        400:
          description: Invalid parameters
        404:
          description: Schedule not found
          
# Begin model definitions
definitions:
  Meeting:    
    description: An object to describe a meeting
    type: object
    properties:
      id:
        description: The unique id that corresponds to a specific meeting object
        type: string
        format: uuid
        example: "20230872-c366-43f1-vasd-929abfdd742b"
      startTime:
        description: The start date-time of the Meeting. The end time isn't saved because the duration is dynamic
        type: string
        format: date-time
        example: "2012-04-23T18:25:43.511Z"
      participantName:
        description: The name of the participant who the meeting is with
        type: string
        example: "George T. Heineman"
    
  Schedule:
    description: An object o describe a certain schedule
    type: object
    properties:
      id:
        description: The unique id that corresponds to a specific schedule
        type: string
        format: uuid
        example: "20230872-c366-43f1-vasd-929abfdd742b"
      name:
        description: The name of the schedule
        type: string
        example: "Fortnite Dance Battles"
      organizerId:
        description: The uuid that points to the Organzier who created the schedule
        type: string
        format: uuid
        example: "2023074-c366-43f1-vasd-929abfdd74123"
      startDateTime:
        description: The date time which corresponds to the start of the schedule
        type: string
        format: date-time
        example: "2012-04-23T18:25:43.511Z"
      endDateTime:
        description: The date time which corresponds to the send of the schedule
        type: string
        format: date-time
        example: "2012-05-23T18:25:43.511Z"
      meetingDuration:
        description: An integer corresponding to the length of a time slot (in minutes)
        type: integer
        enum: [10, 15, 20, 30, 60]
        example: 10
      meetings:
        description: An array that corresponds to the meetings in a schedule
        type: array
        items:
          $ref: '#/definitions/Meeting'
      timesNotAvalible:
        description: An array that corresponds to the unavailable times in a schedule
        type: array
        items:
          type: string
          format: date-time
        example:
          - "2012-04-20T18:25:43.511Z"
          - "2069-04-20T18:25:43.511Z"
          - "2420-04-20T18:25:43.511Z"

  ScheduleConfig:
    type: object
    properties:
      name:
        type: string
      startDayTime:
        type: string
        format: date-time
      endDayTime:
        type: string
        format: date-time
      meetingLength:
        type: integer
    example:
      name: 'Yearly reviews'
      startDayTime: '2018-11-26T8:00:00Z'
      endDayTime: '2018-11-30T17:00:00Z'
      meetingLength: 60
  
  ScheduleList:
    type: array
    items: 
      type: object
      properties:
        id:
          type: string
          format: uuid
        scheduleName:
          type: string
      example:
        - id: '20230872-c366-43f1-8ea7-929abfdd742b'
          scheduleName: 'Yearly reviews'
        - id: '749e7b63-46df-4dd2-aab7-cc83d8417ea5'
          scheduleName: 'Interviews'
        - id: '1a5e6bda-3e04-435b-9f73-ea9d9bf7389d'
          scheduleName: 'Office Hours'
          
  ScheduleQuery:
    type: object
    properties:
      month:
        type: integer
      day:
        type: integer
      year:
        type: integer
      dayOfTheWeek:
        type: integer
      startTime:
        type: string
        format: date-time
      endTime:
        type: string
        format: date-time
    example:
      month: 12
      day: 9
      year: 1998
      dayOfTheWeek: 7
      startTime: '1998-12-09T13:00:00Z'
      endTime: '1998-12-09T17:00:00Z'
  
  SystemAdministratorQuery:
    type: object
    properties:
      day:
        type: integer
      hour:
        type: number
      method:
        type: string
        enum: 
          - day
          - hour
    example:
      day: 1
      method: 'day'
      
    
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /cs37333/cs3733/1.0.0
schemes:
 - https
# Added by API Auto Mocking Plugin
basePath: /cs3733lesath/cs3733/1.0.0